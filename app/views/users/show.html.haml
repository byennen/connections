= link_to "Lougout", destroy_user_session_path, method: :delete
= content_for :header do
  .span3
    = link_to "javascript:void(0);" do
      = display_image @user.profile.image, "xxlarge"
  .span8
    .pro-user{style: "min-height: 120px;"}
      %p Hi! My name is #{@user.full_name} and I'm a #{@user.major} from #{@user.display_city}. Let's connect!
    .offset9
      - if current_user.relatable?(@user)
        %a{href: "#add-contact", class: "btn btn-primary", data: {toggle: "modal"}, style: "margin-right: 10px;"} Add Contact
      - elsif Relationship.reciprocal?(current_user, @user)
        %a{href: "javascript:;", class: "btn btn-danger", style: "margin-right: 10px;"} UnContact
  .clearfix
  - if @user == current_user
    = render partial: "private_tabs"
    .clearfix
  - if can_view?(current_user, @user)
    %br
    %br
    .row-fluid
      .container
        .span10
          %ul.tabs6
            %li
              %a{href: "#tab11"} Education &amp; Skills
            %li
              %a{href: "#tab22"} Experience
            %li
              %a{href: "#tab33"} Portfolio
            - if @user.alumni
              %li
                %a{href: "#tab44"} FAQs
              %li
                %a{href: "#tab55"} Contact
          .clearfix
          .tab_container
            #tab11.tab_content2
              .two-col
                %h3 Education
                - if @profile.education
                  %p
                    I studied #{@profile.education.major} at #{@profile.education.university}.
                    I graduated with a
                    = "#{@profile.education.degree_type}."
                    in
                    = "#{@profile.education.graduation_year}."
                    - unless @profile.education.high_school.blank?
                      I attended #{@profile.education.high_school} high school.
              .two-col
                %h3 Skills &amp; Interests
                %p
                  - if @profile.skill1 || @profile.skill2 || @profile.skill3
                    I am skillled at #{[@profile.skill1, @profile.skill2, @profile.skill3].join(", ")}.
            #tab22.tab_content2
              %ul.posts.po2
                - @experiences.each do |experience|
                  %li
                    %a.avatr{href: "javascript:;"}
                    %h4
                      = experience.company_name
                      %br
                      %span= experience.position_name
                    %p= experience_string(experience)
                    .clearfix
            #tab33.tab_content2
              .profile
                - @portfolio_items.each do |portfolio|
                  .span12.left2.top.bottom
                    .span2
                      = display_image_square portfolio.image, "thumb"
                    .span10
                      .span9
                        %h3
                          = portfolio.name
                          %br
                          %span= portfolio.organization_name
                      .span9
                        = simple_format portfolio.description
            - if @user.alumni?
              #tab44.tab_content2
                .faq
                  %h2 FAQ
                  - if @profile.faqs
                    - split_number = (@profile.faqs.size / 2.0).floor
                    - faqs = @profile.faqs.all.each_slice(split_number).to_a
                    .half
                      %p
                        - faqs.first.each do |f|
                          %strong= f.question
                          %br
                          = f.answer
                          %br
                          %br
                    .half
                      %p
                        - faqs.last.each do |f|
                          %strong= f.question
                          %br
                          = f.answer
                          %br
                          %br
              #tab55.tab_content2
                .contact_requirements
                  - if @profile.contact_requirement
                    %p
                      My contact requirements for students include:
                      %strong= @profile.contact_requirement.gpa_requirement
                      GPA,
                      %strong= @profile.contact_requirement.major_requirement
                      Major,
                      %strong= @profile.contact_requirement.years_working_experience
                      Years of Experience,
                      %br
                      and a Field of Experience
                      %strong= @profile.contact_requirement.fields_of_interest

    - unless @user == current_user
      .clearfix
      %br
      %br
      .row-fluid
        .container
          .span10
            %ul.tabs5
              %li{style: "width: 49.2%"}
                %a{href: "#tab-cor"} Our Correspondence
              %li{style: "width: 49.2%"}
                %a{href: "#tab-clubs"} Our Clubs

            .clearfix
            .tab_container
              #tab-cor.tab_content
                %ul.posts.newp
                  - 2.times do
                    %li.left
                      = link_to "javascript:void(0);", class: 'avatr' do
                        No Image
                      %p A paragraph of text
                      = link_to "1 day ago", "javascript:void(0);", class: "com ncom"
                      =# link_to time_ago_in_words(update.created_at) + " ago", "javascript:void(0);", class: "com ncom"
                      .clearfix
              #tab-clubs.tab_content



#add-contact.modal.hide
  = simple_form_for Relationship.new(user_id: current_user.id) do |f|
    .modal-header
      %button{type: "button", class: "close", data: {dismiss: "modal"}} &times;
      %h3 Add Contact
    .modal-body
      = f.input :relation_id, as: :hidden, input_html: {value: @user.id}
      = f.input :message, as: :text, input_html: {class: 'span5', rows: 10}
    .modal-footer
      = f.submit "Add Contact", class: "btn btn-primary"
= render partial: "shared/new_message"

:javascript

  $(function () {
    $(".tab_content").hide(); //Hide all content
    $("ul.tabs5 li:first").addClass("active").show(); //Activate first tab
    $(".tab_content:first").show(); //Show first tab content

    //On Click Event
    $("ul.tabs5 li").click(function() {
      $("ul.tabs5 li").removeClass("active"); //Remove any "active" class
      $("ul.tabs5 a").removeClass("selected");
      $(this).addClass("active"); //Add "active" class to selected tab
      jQuery(this).children("a").addClass('selected');
      //console.log($(this).toSource());
      $(".tab_content").hide(); //Hide all tab content
      var activeTab = $(this).find("a").attr("href"); //Find the rel attribute value to identify the active tab + content
      $(activeTab).fadeIn(); //Fade in the active content
      return false;
    });
    $(".tab_content2").hide(); //Hide all content
    $("ul.tabs6 li:first").addClass("active").show(); //Activate first tab
    $(".tab_content2:first").show(); //Show first tab content

      //On Click Event
    $("ul.tabs6 li").click(function() {
      $("ul.tabs6 li").removeClass("active"); //Remove any "active" class
      $("ul.tabs6 a").removeClass("selected");
      $(this).addClass("active"); //Add "active" class to selected tab
      jQuery(this).children("a").addClass('selected');
      //console.log($(this).toSource());
      $(".tab_content2").hide(); //Hide all tab content
      var activeTab = $(this).find("a").attr("href"); //Find the rel attribute value to identify the active tab + content
      $(activeTab).fadeIn(); //Fade in the active content
      return false;
    });

  });
  // Iterate over each select element
  $('select.select').each(function() {

    // Cache the number of options
    var $this = $(this),
    numberOfOptions = $(this).children('option').length;

    // Hides the select element
    //$this.addClass('s-hidden');

    // Wrap the select element in a div
    $this.wrap('<div class="select"></div>');

    // Insert a styled div to sit over the top of the hidden select element
    $this.after('<div class="styledSelect"></div>');

    // Cache the styled div
    var $styledSelect = $this.next('div.styledSelect');

    // Show the first select option in the styled div
    $styledSelect.text($this.children('option').eq(0).text());

    // Insert an unordered list after the styled div and also cache the list
    var $list = $('<ul />', {
      'class': 'options'
    }).insertAfter($styledSelect);

    // Insert a list item into the unordered list for each select option
    for (var i = 0; i < numberOfOptions; i++) {
      $('<li />', {
        text: $this.children('option').eq(i).text(),
        rel: $this.children('option').eq(i).val()
      }).appendTo($list);
    }

    // Cache the list items
    var $listItems = $list.children('li');

    // Show the unordered list when the styled div is clicked (also hides it if the div is clicked again)
    $styledSelect.click(function(e) {
      e.stopPropagation();
      $('div.styledSelect.active').each(function() {
        $(this).removeClass('active').next('ul.options').hide();
      });
      $(this).toggleClass('active').next('ul.options').toggle();
    });

    // Hides the unordered list when a list item is clicked and updates the styled div to show the selected list item
    // Updates the select element to have the value of the equivalent option
    $listItems.click(function(e) {
      e.stopPropagation();
      $styledSelect.text($(this).text()).removeClass('active');
      $this.val($(this).attr('rel'));
      $list.hide();
      /* alert($this.val()); Uncomment this for demonstration! */
    });

    // Hides the unordered list when clicking outside of it
    $(document).click(function() {
      $styledSelect.removeClass('active');
      $list.hide();
    });


  });
